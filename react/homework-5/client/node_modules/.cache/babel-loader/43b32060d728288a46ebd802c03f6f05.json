{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { actionTypes } from './authActionTypes';\n\nvar user = function user() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type,\n      payload = _ref.payload;\n\n  switch (type) {\n    case actionTypes.SIGN_UP_SUCCESS:\n    case actionTypes.SIGN_IN_SUCCESS:\n    case actionTypes.REFRESH_CURRENT_USER_SUCCESS:\n      return payload.user;\n\n    case actionTypes.SIGN_OUT_SUCCESS:\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nvar isAuthenticated = function isAuthenticated() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n  var _ref2 = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref2.type;\n\n  switch (type) {\n    case actionTypes.SIGN_UP_SUCCESS:\n    case actionTypes.SIGN_IN_SUCCESS:\n    case actionTypes.REFRESH_CURRENT_USER_SUCCESS:\n      return true;\n\n    case actionTypes.SIGN_UP_ERROR:\n    case actionTypes.SIGN_IN_ERROR:\n    case actionTypes.SIGN_OUT_SUCCESS:\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nvar token = function token() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n  var _ref3 = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref3.type,\n      payload = _ref3.payload;\n\n  switch (type) {\n    case actionTypes.SIGN_UP_SUCCESS:\n    case actionTypes.SIGN_IN_SUCCESS:\n      return payload.token;\n\n    case actionTypes.SIGN_UP_ERROR:\n    case actionTypes.SIGN_IN_ERROR:\n    case actionTypes.SIGN_OUT_SUCCESS:\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  user: user,\n  isAuthenticated: isAuthenticated,\n  token: token\n});","map":{"version":3,"sources":["/Users/nerty777/Desktop/work/goit-fe-course/react/homework-5/client/src/modules/auth/authReducer.js"],"names":["combineReducers","actionTypes","user","state","type","payload","SIGN_UP_SUCCESS","SIGN_IN_SUCCESS","REFRESH_CURRENT_USER_SUCCESS","SIGN_OUT_SUCCESS","isAuthenticated","SIGN_UP_ERROR","SIGN_IN_ERROR","token"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,mBAA5B;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAqC;AAAA,MAApCC,KAAoC,uEAA5B,IAA4B;;AAAA;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAChD,UAAQD,IAAR;AACE,SAAKH,WAAW,CAACK,eAAjB;AACA,SAAKL,WAAW,CAACM,eAAjB;AACA,SAAKN,WAAW,CAACO,4BAAjB;AACE,aAAOH,OAAO,CAACH,IAAf;;AACF,SAAKD,WAAW,CAACQ,gBAAjB;AACE,aAAO,IAAP;;AACF;AACE,aAAON,KAAP;AARJ;AAUD,CAXD;;AAaA,IAAMO,eAAe,GAAG,SAAlBA,eAAkB,GAA6B;AAAA,MAA5BP,KAA4B,uEAApB,KAAoB;;AAAA;AAAA,MAAXC,IAAW,SAAXA,IAAW;;AACnD,UAAQA,IAAR;AACE,SAAKH,WAAW,CAACK,eAAjB;AACA,SAAKL,WAAW,CAACM,eAAjB;AACA,SAAKN,WAAW,CAACO,4BAAjB;AACE,aAAO,IAAP;;AAEF,SAAKP,WAAW,CAACU,aAAjB;AACA,SAAKV,WAAW,CAACW,aAAjB;AACA,SAAKX,WAAW,CAACQ,gBAAjB;AACE,aAAO,KAAP;;AACF;AACE,aAAON,KAAP;AAXJ;AAaD,CAdD;;AAgBA,IAAMU,KAAK,GAAG,SAARA,KAAQ,GAAqC;AAAA,MAApCV,KAAoC,uEAA5B,IAA4B;;AAAA;AAAA,MAApBC,IAAoB,SAApBA,IAAoB;AAAA,MAAdC,OAAc,SAAdA,OAAc;;AACjD,UAAQD,IAAR;AACE,SAAKH,WAAW,CAACK,eAAjB;AACA,SAAKL,WAAW,CAACM,eAAjB;AACE,aAAOF,OAAO,CAACQ,KAAf;;AAEF,SAAKZ,WAAW,CAACU,aAAjB;AACA,SAAKV,WAAW,CAACW,aAAjB;AACA,SAAKX,WAAW,CAACQ,gBAAjB;AACE,aAAO,IAAP;;AAEF;AACE,aAAON,KAAP;AAXJ;AAaD,CAdD;;AAgBA,eAAeH,eAAe,CAAC;AAC7BE,EAAAA,IAAI,EAAJA,IAD6B;AAE7BQ,EAAAA,eAAe,EAAfA,eAF6B;AAG7BG,EAAAA,KAAK,EAALA;AAH6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\nimport { actionTypes } from './authActionTypes';\n\nconst user = (state = null, { type, payload }) => {\n  switch (type) {\n    case actionTypes.SIGN_UP_SUCCESS:\n    case actionTypes.SIGN_IN_SUCCESS:\n    case actionTypes.REFRESH_CURRENT_USER_SUCCESS:\n      return payload.user;\n    case actionTypes.SIGN_OUT_SUCCESS:\n      return null;\n    default:\n      return state;\n  }\n};\n\nconst isAuthenticated = (state = false, { type }) => {\n  switch (type) {\n    case actionTypes.SIGN_UP_SUCCESS:\n    case actionTypes.SIGN_IN_SUCCESS:\n    case actionTypes.REFRESH_CURRENT_USER_SUCCESS:\n      return true;\n\n    case actionTypes.SIGN_UP_ERROR:\n    case actionTypes.SIGN_IN_ERROR:\n    case actionTypes.SIGN_OUT_SUCCESS:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst token = (state = null, { type, payload }) => {\n  switch (type) {\n    case actionTypes.SIGN_UP_SUCCESS:\n    case actionTypes.SIGN_IN_SUCCESS:\n      return payload.token;\n\n    case actionTypes.SIGN_UP_ERROR:\n    case actionTypes.SIGN_IN_ERROR:\n    case actionTypes.SIGN_OUT_SUCCESS:\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n});"]},"metadata":{},"sourceType":"module"}