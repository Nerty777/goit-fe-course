{"ast":null,"code":"import axios from \"axios\";\nimport { signUpRequest, signUpSuccess, signUpError, signInRequest, signInSuccess, signInError, signOutRequest, signOutSuccess, refreshUserStart, refreshUserSuccess } from \"./authAction\";\nimport { getToken } from \"./authSelectors\";\naxios.defaults.baseURL = 'http://localhost:4040';\nexport var signUp = function signUp(credentials) {\n  return function (dispatch) {\n    dispatch(signUpRequest());\n    axios.post(\"/auth/signup\", credentials).then(function (_ref) {\n      var data = _ref.data;\n      return dispatch(signUpSuccess(data));\n    }).catch(function (error) {\n      return dispatch(signUpError(error));\n    });\n  };\n};\nexport var signIn = function signIn(credentials) {\n  return function (dispatch) {\n    dispatch(signInRequest());\n    axios.post(\"/auth/signin\", credentials).then(function (_ref2) {\n      var data = _ref2.data;\n      return dispatch(signInSuccess(data));\n    }).catch(function (error) {\n      return dispatch(signInError(error));\n    });\n  };\n};\nexport var signOut = function signOut() {\n  return function (dispatch, getState) {\n    dispatch(signOutRequest());\n    var token = getToken(getState());\n    var config = {\n      headers: {\n        Authorization: token\n      }\n    };\n    axios.post(\"/auth/signout\", {}, config).then(function () {\n      return dispatch(signOutSuccess());\n    });\n  };\n};\nexport var refreshCurrentUser = function refreshCurrentUser() {\n  return function (dispatch, getState) {\n    var token = getToken(getState());\n    if (!token) return;\n    dispatch(refreshUserStart());\n    axios.get(\"/auth/current\", {\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      }\n    }).then(function (_ref3) {\n      var data = _ref3.data;\n      return dispatch(refreshUserSuccess(data.user));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/nerty777/Desktop/work/goit-fe-course/react/homework-5/client/src/modules/auth/authOperations.js"],"names":["axios","signUpRequest","signUpSuccess","signUpError","signInRequest","signInSuccess","signInError","signOutRequest","signOutSuccess","refreshUserStart","refreshUserSuccess","getToken","defaults","baseURL","signUp","credentials","dispatch","post","then","data","catch","error","signIn","signOut","getState","token","config","headers","Authorization","refreshCurrentUser","get","user"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,aALF,EAMEC,WANF,EAOEC,cAPF,EAQEC,cARF,EASEC,gBATF,EAUEC,kBAVF,QAWO,cAXP;AAaA,SAASC,QAAT,QAAyB,iBAAzB;AAEAX,KAAK,CAACY,QAAN,CAAeC,OAAf,GAAyB,uBAAzB;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,WAAW;AAAA,SAAI,UAAAC,QAAQ,EAAI;AAC/CA,IAAAA,QAAQ,CAACf,aAAa,EAAd,CAAR;AACAD,IAAAA,KAAK,CACFiB,IADH,CACQ,cADR,EACwBF,WADxB,EAEGG,IAFH,CAEQ;AAAA,UAAGC,IAAH,QAAGA,IAAH;AAAA,aAAcH,QAAQ,CAACd,aAAa,CAACiB,IAAD,CAAd,CAAtB;AAAA,KAFR,EAGGC,KAHH,CAGS,UAAAC,KAAK;AAAA,aAAIL,QAAQ,CAACb,WAAW,CAACkB,KAAD,CAAZ,CAAZ;AAAA,KAHd;AAID,GANgC;AAAA,CAA1B;AAQP,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAP,WAAW;AAAA,SAAI,UAAAC,QAAQ,EAAI;AAC/CA,IAAAA,QAAQ,CAACZ,aAAa,EAAd,CAAR;AACAJ,IAAAA,KAAK,CACFiB,IADH,CACQ,cADR,EACwBF,WADxB,EAEGG,IAFH,CAEQ;AAAA,UAAGC,IAAH,SAAGA,IAAH;AAAA,aAAcH,QAAQ,CAACX,aAAa,CAACc,IAAD,CAAd,CAAtB;AAAA,KAFR,EAGGC,KAHH,CAGS,UAAAC,KAAK;AAAA,aAAIL,QAAQ,CAACV,WAAW,CAACe,KAAD,CAAZ,CAAZ;AAAA,KAHd;AAID,GANgC;AAAA,CAA1B;AAQP,OAAO,IAAME,OAAO,GAAG,SAAVA,OAAU;AAAA,SAAM,UAACP,QAAD,EAAWQ,QAAX,EAAwB;AACnDR,IAAAA,QAAQ,CAACT,cAAc,EAAf,CAAR;AACA,QAAMkB,KAAK,GAAGd,QAAQ,CAACa,QAAQ,EAAT,CAAtB;AAEA,QAAME,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEH;AADR;AADI,KAAf;AAMAzB,IAAAA,KAAK,CACFiB,IADH,CACQ,eADR,EACyB,EADzB,EAC6BS,MAD7B,EAEGR,IAFH,CAEQ;AAAA,aAAMF,QAAQ,CAACR,cAAc,EAAf,CAAd;AAAA,KAFR;AAGD,GAbsB;AAAA,CAAhB;AAeP,OAAO,IAAMqB,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,SAAM,UAACb,QAAD,EAAWQ,QAAX,EAAwB;AAC9D,QAAMC,KAAK,GAAGd,QAAQ,CAACa,QAAQ,EAAT,CAAtB;AACA,QAAI,CAACC,KAAL,EAAY;AAEZT,IAAAA,QAAQ,CAACP,gBAAgB,EAAjB,CAAR;AACAT,IAAAA,KAAK,CACF8B,GADH,CACO,eADP,EACwB;AACpBH,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,mBAAYH,KAAZ;AADN;AADW,KADxB,EAMGP,IANH,CAMQ;AAAA,UAAGC,IAAH,SAAGA,IAAH;AAAA,aAAcH,QAAQ,CAACN,kBAAkB,CAACS,IAAI,CAACY,IAAN,CAAnB,CAAtB;AAAA,KANR;AAOD,GAZiC;AAAA,CAA3B","sourcesContent":["import axios from \"axios\";\nimport {\n  signUpRequest,\n  signUpSuccess,\n  signUpError,\n  signInRequest,\n  signInSuccess,\n  signInError,\n  signOutRequest,\n  signOutSuccess,\n  refreshUserStart,\n  refreshUserSuccess\n} from \"./authAction\";\n\nimport { getToken } from \"./authSelectors\";\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport const signUp = credentials => dispatch => {\n  dispatch(signUpRequest());\n  axios\n    .post(\"/auth/signup\", credentials)\n    .then(({ data }) => dispatch(signUpSuccess(data)))\n    .catch(error => dispatch(signUpError(error)));\n};\n\nexport const signIn = credentials => dispatch => {\n  dispatch(signInRequest());\n  axios\n    .post(\"/auth/signin\", credentials)\n    .then(({ data }) => dispatch(signInSuccess(data)))\n    .catch(error => dispatch(signInError(error)));\n};\n\nexport const signOut = () => (dispatch, getState) => {\n  dispatch(signOutRequest());\n  const token = getToken(getState());\n\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n\n  axios\n    .post(\"/auth/signout\", {}, config)\n    .then(() => dispatch(signOutSuccess()));\n};\n\nexport const refreshCurrentUser = () => (dispatch, getState) => {\n  const token = getToken(getState());\n  if (!token) return;\n\n  dispatch(refreshUserStart());\n  axios\n    .get(\"/auth/current\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    })\n    .then(({ data }) => dispatch(refreshUserSuccess(data.user)));\n};\n"]},"metadata":{},"sourceType":"module"}