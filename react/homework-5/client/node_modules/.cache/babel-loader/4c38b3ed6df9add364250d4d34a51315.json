{"ast":null,"code":"import axios from 'axios';\nimport { signUpRequest, signUpSuccess, signUpError, signInRequest, signInSuccess, signInError, signOutRequest, signOutSuccess, refreshUserStart, refreshUserSuccess } from './actions';\nimport * as selectors from './';\naxios.defaults.baseURL = 'http://localhost:4040';\n\nvar setAuthHeader = function setAuthHeader(token) {\n  axios.defaults.headers.common['Authorization'] = \"Bearer \".concat(token);\n};\n\nvar clearAuthHeader = function clearAuthHeader() {\n  axios.defaults.headers.common['Authorization'] = null;\n};\n\nexport var signUp = function signUp(credentials) {\n  return function (dispatch) {\n    dispatch(signUpRequest());\n    axios.post('/auth/signup', credentials).then(function (_ref) {\n      var data = _ref.data;\n      setAuthHeader(data.token);\n      dispatch(signUpSuccess(data));\n    }).catch(function (error) {\n      return dispatch(signUpError(error));\n    });\n  };\n};\nexport var signIn = function signIn(credentials) {\n  return function (dispatch) {\n    dispatch(signInRequest());\n    axios.post('/auth/signin', credentials).then(function (_ref2) {\n      var data = _ref2.data;\n      setAuthHeader(data.token);\n      dispatch(signInSuccess(data));\n    }).catch(function (error) {\n      return dispatch(signInError(error));\n    });\n  };\n};\nexport var signOut = function signOut() {\n  return function (dispatch) {\n    dispatch(signOutRequest());\n    axios.post('/auth/signout').then(function () {\n      clearAuthHeader();\n      dispatch(signOutSuccess());\n    });\n  };\n};\nexport var refreshCurrentUser = function refreshCurrentUser() {\n  return function (dispatch, getState) {\n    var token = selectors.getToken(getState());\n    if (!token) return;\n    setAuthHeader(token);\n    dispatch(refreshUserStart());\n    axios.get('/auth/current').then(function (_ref3) {\n      var data = _ref3.data;\n      return dispatch(refreshUserSuccess(data.user));\n    }).catch(function (error) {\n      // dispach екшен чтобы убрать токен из state\n      clearAuthHeader();\n      console.log('Error while refreshing: ', error);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/nerty777/Desktop/work/goit-fe-course/react/homework-5/client/src/modules/auth/authOperations.js"],"names":["axios","signUpRequest","signUpSuccess","signUpError","signInRequest","signInSuccess","signInError","signOutRequest","signOutSuccess","refreshUserStart","refreshUserSuccess","selectors","defaults","baseURL","setAuthHeader","token","headers","common","clearAuthHeader","signUp","credentials","dispatch","post","then","data","catch","error","signIn","signOut","refreshCurrentUser","getState","getToken","get","user","console","log"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n  signUpRequest,\n  signUpSuccess,\n  signUpError,\n  signInRequest,\n  signInSuccess,\n  signInError,\n  signOutRequest,\n  signOutSuccess,\n  refreshUserStart,\n  refreshUserSuccess\n} from './actions';\nimport * as selectors from './';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst setAuthHeader = token => {\n  axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n};\n\nconst clearAuthHeader = () => {\n  axios.defaults.headers.common['Authorization'] = null;\n};\n\nexport const signUp = credentials => dispatch => {\n  dispatch(signUpRequest());\n\n  axios\n    .post('/auth/signup', credentials)\n    .then(({ data }) => {\n      setAuthHeader(data.token);\n\n      dispatch(signUpSuccess(data));\n    })\n    .catch(error => dispatch(signUpError(error)));\n};\n\nexport const signIn = credentials => dispatch => {\n  dispatch(signInRequest());\n\n  axios\n    .post('/auth/signin', credentials)\n    .then(({ data }) => {\n      setAuthHeader(data.token);\n      dispatch(signInSuccess(data));\n    })\n    .catch(error => dispatch(signInError(error)));\n};\n\nexport const signOut = () => dispatch => {\n  dispatch(signOutRequest());\n\n  axios.post('/auth/signout').then(() => {\n    clearAuthHeader();\n    dispatch(signOutSuccess());\n  });\n};\n\nexport const refreshCurrentUser = () => (dispatch, getState) => {\n  const token = selectors.getToken(getState());\n\n  if (!token) return;\n\n  setAuthHeader(token);\n\n  dispatch(refreshUserStart());\n\n  axios\n    .get('/auth/current')\n    .then(({ data }) => dispatch(refreshUserSuccess(data.user)))\n    .catch(error => {\n      // dispach екшен чтобы убрать токен из state\n      clearAuthHeader();\n      console.log('Error while refreshing: ', error);\n    });\n};"]},"metadata":{},"sourceType":"module"}